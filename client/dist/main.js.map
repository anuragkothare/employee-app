{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Employee/employee.ts","webpack:///./src/app/app-routing.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee.service.ts","webpack:///./src/app/employees/employees.component.css","webpack:///./src/app/employees/employees.component.html","webpack:///./src/app/employees/employees.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Employee {\n\n  constructor(public name: String, public email: String, public phone: number, public address: String ) {\n    this.name = name\n    this.email = email\n    this.phone = phone\n    this.address = address\n  }\n}\n","import { RegisterComponent } from './register/register.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ModuleWithProviders } from \"@angular/core\";\n\n\n\nconst routes: Routes = [\n  {path: 'employees', component: EmployeesComponent},\n  {path: '', redirectTo: '/employees', pathMatch: 'full'},\n  {path: 'register', component: RegisterComponent},\n  // {path: 'add', component: AddProductComponent},\n\n];\n\nexport const routingModule: ModuleWithProviders = RouterModule.forRoot(routes);\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {  FormsModule} from '@angular/forms'\nimport { HttpModule } from '@angular/http';\n\nimport { RouterModule } from '@angular/router';\n\nimport {routingModule} from '../app/app-routing'\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeesComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CommonModule,\n    RouterModule.forRoot([]),\n    routingModule,\n    HttpModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Employee } from './Employee/employee';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(public http: HttpClient) { }\n\n  public baseUrl = \"http://localhost:5000/api\"\n\n  getEmployees() {\n    return this.http.get<Employee[]>('api/employees')\n  }\n\n  registerEmployee(model:Employee) {\n    return this.http.post('api/employees/register', model)\n  }\n}\n","module.exports = \"h3 {\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\n  font-size: 53px;\\n}\\n\\n.add {\\n  font-family: 'Francois One', sans-serif;\\n  font-size: 24px;\\n}\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <h3 style=\\\"text-align: center; font-family: 'Times New Roman', Times, serif\\\">Employees Manager App</h3>\\n</div>\\n\\n<div class=\\\"container\\\">\\n    <thead style=\\\"align-items: center\\\" class=\\\"container\\\">\\n        <tr>\\n          <th><strong class=\\\"add\\\">Add a new Employee</strong></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>\\n            <button (click)=\\\"btnClick()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Add Employee</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <br>\\n    <table class=\\\"table table-hover\\\">\\n        <thead class=\\\"thead-dark\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\">Email</th>\\n            <th scope=\\\"col\\\">Phone</th>\\n            <th scope=\\\"col\\\">Address</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let employee of employees | async; let i = index\\\">\\n              <th scope=\\\"row\\\">{{i+1}}</th>\\n              <td>{{employee.name}}</td>\\n              <td>{{employee.email}}</td>\\n              <td>{{employee.phone}}</td>\\n              <td>{{employee.address}}</td>\\n            </tr>\\n        </tbody>\\n      </table>\\n\\n</div>\\n<br>\\n\\n\\n\\n\\n\"","import { Observable } from 'rxjs';\nimport { Employee } from './../Employee/employee';\nimport { EmployeeService } from './../employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n\n  public employees: Observable<Array<Employee>>\n\n  constructor(private employeeService: EmployeeService, public router: Router, private location: Location) { }\n\n  ngOnInit() {\n    console.log(\"test\")\n    this.employees = this.employeeService.getEmployees()\n    console.log(\"NgONIT called\")\n  }\n\n  btnClick() {\n    this.router.navigate(['/register']);\n  }\n\n  cancel() {\n    this.location.back(); // <-- go back to previous location on cancel\n  }\n\n}\n","module.exports = \"h2 {\\n  font-family: 'Francois One', sans-serif;\\n  font-size: 45px;\\n}\\n\"","module.exports = \"\\n<br>\\n<br>\\n<h2 style=\\\"text-align: center\\\">Register Employee</h2>\\n<br>\\n<br>\\n\\n<div class=\\\"container\\\">\\n    <form>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\"><strong>Name</strong>  </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=name required [(ngModel)]=\\\"model.name\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" placeholder=\\\"Enter Name\\\">\\n          </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\"> <strong>Email Address</strong></label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"phone\\\"> <strong>Phone Number</strong>  </label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.phone\\\" name=\\\"phone\\\" id=\\\"phone\\\" placeholder=\\\"Enter Phone Number\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"address\\\"><strong>Address</strong>  </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=address [(ngModel)]=\\\"model.address\\\" name=\\\"phone\\\" placeholder=\\\"Enter Address\\\">\\n          </div>\\n\\n\\n        <button type=\\\"button\\\" (click)=\\\"onSubmit()\\\" class=\\\"btn btn-success\\\">Submit</button>\\n      </form>\\n\\n        <br>\\n      <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">\\n          <strong>{{errorMessage}}</strong>\\n      </div>\\n\\n</div>\\n\\n\"","import { EmployeeService } from './../employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Employee } from '../Employee/employee';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  constructor(public employeeService: EmployeeService, public router: Router) { }\n\n  errorMessage: String\n\n  ngOnInit() {\n  }\n\n  model:Employee = new Employee(\"\", \"\", 1, \"\")\n\n  onSubmit() {\n      this.employeeService.registerEmployee(this.model).subscribe(\n        (data: any) => {\n          console.log(data)\n          this.router.navigate(['/employees']);\n        },\n        error => {\n          console.log(error)\n          this.errorMessage = error.error.errorMessage;}\n      )\n\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}